option, -warn, -debug, -info, -echo;
// option, warn, debug, info, -echo;
// Option,  warn, info, echo;
ASSIGN, ECHO = "Echo.txt";


title, s='MAD-X sequence test';

// define beam parameters
call, file='./boo_beam_inj.mad';

// energy
t=0.32;
//t=578;

// flags
Err_Quad_aligned := 1;     // K1L (field for quad)
Err_Dip_aligned := 1;      // K0L (field for dip)
Err_Quad_multipole := 1;   // for b2, a2, b3, b5 garmonics
Err_Dip_multipole := 1;    // for b1, b2, b3, a1, a2, a3 garmonics
Err_Quad := 1;            // effective lenght
Err_Dip := 1;             // effective lenght

// ring elements' parameters

// Option,  warn, info, echo;
call, file='./boo_steer_bpm.opt';		// './boo.opt'; // './boo_sup_loop.opt'; 


value, km2b.1.err->hkick, m2b.1.err->r1;

print, text="+++!!!After!!!+++";

//use, period=gensup;
//use, period=booster;

xxx(j, ns): macro={
	//value, (GL_qdj.ns/Bro - kqd*lq);
        //value, (BL_maj.ns/Bro);
		//value, mja.ns->k0 * mja.ns->L, mjb.ns->k0 * mjb.ns->L;
        //value, mja.ns.err->k0l, mjb.ns.err->k0l;
        //value, mja.ns.err->k2l, mjb.ns.err->k2l;
        //value, qdj.ns.err->k1l, qfj.ns.err->k1l;

};

ns := 1;
while (ns <= 4) {
//	value, ns;
	n := 1;
	while (n <= 6) {
		exec, xxx($n, $ns);
		n = n + 1;		
	};	
	ns = ns + 1;
};

// stop;

// ring optics

call, file='./boo_seq_steer_bpm.str';	// './boo_seq.str'; // './boo_sup_seq.str'

//use, period=gensup;
use, period=booster;
closed_orbit=real;

option, -echo;

// set errors (int+allign)

// call, file='./error.mad';

// const bSteer = 0.01;

// ST1.1->hkick := bSteer / Bro;
// call, file= './Steerer_data.mad';

RIPKEN=true;

! Initialize PTC
ptc_create_universe;
ptc_create_layout,model=2,method=6,nst=10,exact;
ptc_align;

select,flag=ptc_twiss,column=name,s,beta11,beta21,
                                  beta12,beta22,disp1,disp3,x,px,y,py, r11, r12, r22, r21;

ptc_twiss,closed_orbit,icase=5,file=twiss_ptc_ring,no=1;

//PTC_NORMAL,closed_orbit,maptable,icase=5,no=1;

ptc_end;

//!write,table="map_table",file="map_table";
//write,table="map_table",file="ring_matrix_at_end";

//stop;


option, -echo;

select, flag=twiss, clear;
select, flag=twiss, column=name, s, betx, alfx, mux, dx, dpx, bety, alfy, muy, x, y;
twiss, sequence=booster, file=booster_twiss_tot_err.txt, chrom, save;					// write Twiss 
select, flag=twiss, clear;
select, flag=twiss, column=name, KEYWORD, s, k0l, k1l, k2l, k3l, k5l, k1sl, k2sl, k3sl, hkick, vkick;
twiss, sequence=booster, file=booster_magnets_tot_err.txt, chrom, save;					// write Magnets parameters


select, flag=twiss, clear;
select, flag=twiss, column=name, s, x, y, BETA11, BETA21, BETA12, BETA22, R11, R12, R21, R22;
twiss, sequence=booster, file=booster_twiss_tot_err_ripken.txt, chrom, save, ripken;					// write Twiss 
//stop;



/*
select, flag=twiss, clear;
select, flag=twiss, class=hmonitor;
select, flag=twiss, class=vmonitor, column=name, KEYWORD, s, x, y;
twiss, sequence=booster, file=bpm_data.dat, chrom, save;							// write BPM data
*/
/*
select, flag=twiss, clear;
select, flag=twiss, class=kicker;
select, flag=twiss, class=hmonitor;
select, flag=twiss, class=vmonitor, column=name, KEYWORD, s, x, y, hkick, vkick;
twiss, sequence=booster, file=bpm_steer_data_tot_err.dat, chrom, save;						// write data for R-matrix

//stop;

/*
// Plot
setplot, post=2;
plot, haxis=s, vaxis1=betx,bety, vaxis2=dx, colour=100, noversion, interpolate, 
	table=twiss, title="Lattice functions in Booster", file=lat;	// plotting whole ring

setplot, post=2;
plot, haxis=s, vaxis1=betx,bety, vaxis2=dx, colour=100, spline,
	noversion, interpolate, range=#S/#E, HMAX=210.96/4.0,
	table=twiss, title="Lattice functions in Booster", file=lat;	// plotting quadrant

removefile, file="Lattice Functions.eps";
renamefile, file="lat01.eps", name="Lattice Functions.eps";

system, 'del Lattice_Functions.eps';
system, 'ren lat01.eps Lattice_Functions.eps';

//stop;
// twiss, sequence=booster, file=booster_twiss_ring.txt, chrom, save;

set, format="15.10g";
select, flag=save, clear;
select, flag=save, full;
save, sequence= gensup, booster, file=booster.seq;
*/

//PLOT, table = twiss_data, file = orbit_hor.ps, haxis = s, vaxis = x;
//PLOT, table = twiss_data, file = orbit_ver.ps, haxis = s, vaxis = y;

call, file='./ptc_track_X_PX.madx';

system, 'Phase-plane_plot_tmp.gpl';		// run gnuplot Phase-Plane Plot


survey, file=survey.out;

PLOT, table = survey_data, file = surv.ps, haxis = x, vaxis = z;


//stop;